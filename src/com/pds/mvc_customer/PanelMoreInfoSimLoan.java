/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package com.pds.mvc_customer;


import com.pds.entities.SimulationPret;
import com.pds.graphics.MainGraphics;
import com.pds.graphics.Printer;
import com.pds.implobs.IObserver;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.SwingUtilities;

/**
 *
 * @author zouhairhajji
 */
public class PanelMoreInfoSimLoan extends javax.swing.JInternalFrame implements IObserver{
    
    private Controller_GestClient controller;
    private SimulationPret loan;
    private JFrame frame;
    
    
    public PanelMoreInfoSimLoan(Controller_GestClient controller) {
        this.controller = controller;
        initComponents();
        frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        this.setJMenuBar(createMenuBar());
    }
    
    
    public void loadSimulation(SimulationPret loan){
        this.loan = loan;
        MainGraphics m=new MainGraphics (loan);
        this.getContentPane().add(m);
        this.setSize(1350,670);
        
        
        
    }
    
    protected JMenuBar createMenuBar() {
        JMenuBar menuBar = new JMenuBar();
        JMenu menu = new JMenu("File");
        menu.setMnemonic(KeyEvent.VK_N);
        JMenuItem menuItem = new JMenuItem("Imprimer");
        menuItem.setMnemonic(KeyEvent.VK_N);
        menuItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                PrinterJob job = PrinterJob.getPrinterJob();
                
                PageFormat format = job.defaultPage();
                format.setOrientation(PageFormat.LANDSCAPE);
                PageFormat postformat = job.pageDialog(format);
                job.setPrintable(new Printer(frame), format);
                

                    if(job.printDialog()) try {
                        job.print();
                } catch (PrinterException ex) {
                    Logger.getLogger(PanelMoreInfoSimLoan.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
        menu.add(menuItem);
        menuBar.add(menu);
        return menuBar;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setIconifiable(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 631, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    @Override
    public boolean update(com.pds.implobs.AbstractObservable sender, String message, Object... data) {
        return true;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
