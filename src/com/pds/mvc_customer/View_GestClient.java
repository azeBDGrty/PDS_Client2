/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pds.mvc_customer;

import com.pds.entities.Client;
import com.pds.implobs.AbstractObservable;
import com.pds.implobs.IObserver;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zouhairhajji
 */
public class View_GestClient extends JInternalFrame implements IObserver{

    private DefaultTableModel tableModel;
    private String[] columnsTable;
    private Controller_GestClient controller;
    private List<Client> clients;
    private int idSelectedIndex;
    
    public View_GestClient(Controller_GestClient controller) {
        this.controller = controller;
        this.columnsTable = new String[]{"Nom", "Prenom", "Date de naissance", "Sexe", "Code Postale", "Pays de naissance", "Adresse", "Profession", "Situation", "Apport", "Apport du conjoint"};
        this.tableModel = new DefaultTableModel(columnsTable, 0);
        initComponents();
        controller.askListClient();
        this.jTable1.getSelectionModel().addListSelectionListener(new TableSelecetCellListener());
        this.bVisSimPret.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        bVisSimPret = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jTable1.setModel(this.tableModel);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setText("Liste des clients");

        bVisSimPret.setText("Visualiser les simulations réalisées");
        bVisSimPret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVisSimPretActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel1)
                        .addGap(0, 383, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bVisSimPret, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bVisSimPret, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bVisSimPretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVisSimPretActionPerformed
        controller.showFrameListSimPret(this.clients.get(this.idSelectedIndex));
    }//GEN-LAST:event_bVisSimPretActionPerformed

    @Override
    public boolean update(AbstractObservable sender, String message, Object... data) {
        return false;
    }

    public void chargerTable(List<Client> clients) {
        this.clients = clients;
        this.tableModel.setRowCount(0);
        for(Client client : clients){
            tableModel.addRow(new Object[]{
                client.getFirstName(),
                client.getLastName(),
                client.getDateBirthDate(),
                client.getSexe().getAbv(),
                client.getCodePost(),
                client.getPays().getAlpha2(),
                client.getAdress(),
                client.getInfoPerso().getProfession(),
                client.getInfoPerso().getSituation(),
                client.getInfoPerso().getRevenuMensuel(),
                client.getInfoPerso().getRevenuConjoint()
            });
        }
    }


    
    public class TableSelecetCellListener implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                if (!((ListSelectionModel) e.getSource()).isSelectionEmpty()) {
                    // Selected
                    bVisSimPret.setEnabled(true);
                    idSelectedIndex = ((ListSelectionModel) e.getSource()).getMinSelectionIndex();
                    System.out.println(clients.get(idSelectedIndex));
                } else {
                    // Non-Selected
                    bVisSimPret.setEnabled(false);
                    idSelectedIndex = -1;
                }
            }

        }

    }
    
    
    
    
    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bVisSimPret;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
